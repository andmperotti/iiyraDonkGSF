<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gems Requested</title>
    <link rel="stylesheet" href="css/style.css" type="text/css">
    <link
    rel="icon"
    type="image/png"
    sizes="32x32"
    href="/images/favicon-32x32.png"
  />
</head>
<body>
    <header>
        <nav class="topNav">
            <a href="/" class="nav-link"><span>Main</span></a>
            <a href="/login" class="nav-link"><span>Login</span></a>
            <a href="/signup" class="nav-link"><span>Signup</span></a>
            <a href="/request" class="nav-link"><span>Request</span></a>
            <a href="/uniques" class="nav-link"><span>Uniques</span></a>
            <a href="/gems" class="nav-link"><span>Gems</span></a>
            <a href="/others" class="nav-link"><span>Others</span></a>
            <a href="/jobs" class="nav-link"><span>Jobs</span></a>
            <a href="/users" class="nav-link"><span>Users</span></a>
            <a href="/builds" class="nav-link"><span>Builds</span></a>
            <a href="/resources" class="nav-link"><span>Resources</span></a>
            <a href="/logout" class="nav-link"><span>Logout</span></a>
        </nav>
    </header>

    <button id="menuButton" type="button">Menu</button>
    <nav class="menuNav">
        <a href="/" class="nav-link"><span>Main</span></a>
        <a href="/login" class="nav-link"><span>Login</span></a>
        <a href="/signup" class="nav-link"><span>Signup</span></a>
        <a href="/request" class="nav-link"><span>Request</span></a>
        <a href="/uniques" class="nav-link"><span>Uniques</span></a>
        <a href="/gems" class="nav-link"><span>Gems</span></a>
        <a href="/others" class="nav-link"><span>Others</span></a>
        <a href="/jobs" class="nav-link"><span>Jobs</span></a>
        <a href="/users" class="nav-link"><span>Users</span></a>
        <a href="/builds" class="nav-link"><span>Builds</span></a>
        <a href="/resources" class="nav-link"><span>Resources</span></a>
        <a href="/logout" class="nav-link"><span>Logout</span></a>
    </nav>

    <h1>Gems Requested</h1>

    <img src="images/gems.gif">


    <section class="labs">
        <h2 class="timer"><span id="time">Loading...</span></h2>
        <a href="https://www.poelab.com/nlq2j/">Normal Lab</a>
        <a href="https://www.poelab.com/ecl4r/">Cruel Lab</a>
        <a href="https://www.poelab.com/iettp/">Merc Lab</a>
        <a href="https://www.poelab.com/bcwmh/">Uber Lab</a>
    </section>

    <p class="centered-description">To delete your requested gems, go to the request page, navigate to gems, use the delete button beside your item.</p>

    <ul class="all-requested">
        <li class="field-description">Gem Name - Account Name - Discord Name</li>
        <% gems.forEach( el => { %>
                      <%
                let poeAccountName = el.userName;
                let firstNameMatch = poeAccountName.match(/(\w+)\#/); 
                let descriptorMatch = poeAccountName.match(/\#(\d+)/); 
                let firstName = firstNameMatch ? firstNameMatch[1] : ''; 
                let descriptor = descriptorMatch ? descriptorMatch[1] : ''; 
            %>
                <li class='requestedItem' data-id='<%=el._id%>'>
                    <span>
                        <%= el.requestedItem %></span> - <a href="https://www.pathofexile.com/account/view-profile/<%=firstName%>-<%=descriptor%>"><%= el.userName %></a> - <%=el.discordName%>
                    
                </li>
        <% }) %>    
        </ul>




    <script src="js/main.js"></script>
    <script>
    //functionality to calculate time until next labyrinth reset

        function timeUntilMidnightUTC() {
            const now = new Date();
            const nowUTC = new Date(Date.UTC(
              now.getUTCFullYear(),
              now.getUTCMonth(),
              now.getUTCDate(),
              now.getUTCHours(),
              now.getUTCMinutes(),
              now.getUTCSeconds(),
              now.getUTCMilliseconds()
            ));
        
            const midnightUTC = new Date(Date.UTC(
              now.getUTCFullYear(),
              now.getUTCMonth(),
              now.getUTCDate() + 1, // move to next day
              0, 0, 0, 0
            ));
        
            const timeDifference = midnightUTC - nowUTC;
        
            const hours = Math.floor(timeDifference / (1000 * 60 * 60));
            const minutes = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);
        
            return { hours, minutes, seconds };
          }
        
          function displayTimeUntilMidnightUTC() {
            const time = timeUntilMidnightUTC();
            document.getElementById('time').textContent = `Lab resets in: ${time.hours}h ${time.minutes}m ${time.seconds}s`
          }
        
          // Call the function to display the time when the page loads
          displayTimeUntilMidnightUTC();
        </script>
</body>
</html>