<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>builds</title>
    <link rel="stylesheet" href="css/style.css" type="text/css">
    <link
    rel="icon"
    type="image/png"
    sizes="32x32"
    href="/images/favicon-32x32.png"
  />
</head>
<body>
    <header>
        <nav class="topNav">
            <a href="/" class="nav-link"><span>Main</span></a>
            <a href="/login" class="nav-link"><span>Login</span></a>
            <a href="/signup" class="nav-link"><span>Signup</span></a>
            <a href="/request" class="nav-link"><span>Request</span></a>
            <a href="/uniques" class="nav-link"><span>Uniques</span></a>
            <a href="/gems" class="nav-link"><span>Gems</span></a>
            <a href="/others" class="nav-link"><span>Others</span></a>
            <a href="/jobs" class="nav-link"><span>Jobs</span></a>
            <a href="/users" class="nav-link"><span>Users</span></a>
            <a href="/builds" class="nav-link"><span>Builds</span></a>
            <a href="/resources" class="nav-link"><span>Resources</span></a>
            <a href="/logout" class="nav-link logout"><span>Logout</span></a>
        </nav>
    </header>

    <button id="menuButton" type="button">Menu</button>
    <nav class="menuNav">
        <a href="/" class="nav-link"><span>Main</span></a>
        <a href="/login" class="nav-link"><span>Login</span></a>
        <a href="/signup" class="nav-link"><span>Signup</span></a>
        <a href="/request" class="nav-link"><span>Request</span></a>
        <a href="/uniques" class="nav-link"><span>Uniques</span></a>
        <a href="/gems" class="nav-link"><span>Gems</span></a>
        <a href="/others" class="nav-link"><span>Others</span></a>
        <a href="/jobs" class="nav-link"><span>Jobs</span></a>
        <a href="/users" class="nav-link"><span>Users</span></a>
        <a href="/builds" class="nav-link"><span>Builds</span></a>
        <a href="/resources" class="nav-link"><span>Resources</span></a>
        <a href="/logout" class="nav-link logout"><span>Logout</span></a>
    </nav>

    <h1>Builds</h1>

    <img src="images/peepoPonderingPOB.webp" alt="peepo the frog staring at path of building" class="buildsImg">

    <form action="/builds/createBuild" method='POST' class="center-column">
        <input type="text" placeholder="Enter Build, ex: 'dd necro'" name='buildName' required autocomplete="off">
        <input type="text" placeholder="Character Name" name="buildCharacterName" autocomplete="off">
        <input type="text" placeholder="Optional pob link or resource" name="buildResource" autocomplete="off">
        <input type="submit" value="Add Build">
    </form>

    <p class="centered-description">Need to change character name? Just delete it and remake.</p>
    <p class="centered-description">By default ordering of builds is submittance order; first/oldest submitted to -> last/newly submitted.</p>
    
    <table class="all-requested">
        <thead>
            <tr class="field-description">
                <th scope="col" onclick="sortTable(0)">Account Name ↑↓</th>
                <th scope="col" onclick="sortTable(0)">Character Name ↑↓</th>
                <th scope="col" onclick="sortTable(0)">Build Description/Resource(pob,etc) optional ↑↓</th>
                <th scope="col" class="fulfillment-actions">Actions</th>

            </tr>
        </thead>
        <tbody>
            <% if(builds.length<1){%>
                <tr class='requestedItem'>
                    <td class="requested-cell">None Created</td>
                    <td class="requested-cell">None Created</td>
                    <td class="requested-cell">None Created</td>
                    <td class="requested-cell">None Created</td>
                </tr>
            <%}else{
                builds.forEach( el => {
                    let poeAccountName = el.userName;
                    let firstNameMatch = poeAccountName.match(/(\w+)\#/); 
                    let descriptorMatch = poeAccountName.match(/\#(\d+)/); 
                    let firstName = firstNameMatch ? firstNameMatch[1] : ''; 
                    let descriptor = descriptorMatch ? descriptorMatch[1] : ''; 
                    %>
                        <tr class='requestedItem' data-id='<%=el._id%>'>
                            <td class="requested-cell"><a href="https://www.pathofexile.com/account/view-profile/<%=firstName%>-<%=descriptor%>"><%=el.userName%></a></td>  
                            <td class="requested-cell"><a href="https://www.pathofexile.com/account/view-profile/<%=firstName%>-<%=descriptor%>/characters?characterName=<%=el.buildCharacterName%>"><%=el.buildCharacterName%></a></td>  
                            <td class="requested-cell"><a href="<%=el.buildResource%>"><%=el.buildName%></td>
                            <td class="request-actions">
                                <% if(el.userName===requestor.userName||requestor.isAdmin){%>
                                <span class="delete-build">Delete</span>
                            <% } %>                            
                            </td>
                        </tr>
                <% }) 
            }%>

        </tbody>
    </table>



    <script src="js/main.js"></script>
    <script>
        const deleteBuildBtn = document.querySelectorAll(".delete-build");

        async function deleteBuild() {
            const requestId = this.parentNode.parentNode.dataset.id;
            try {
                let confirm = await verifyModal(
                "Delete:",
                // eslint-disable-next-line prettier/prettier
                this.parentNode.parentNode.childNodes[5].textContent.trim()
                );
                if (confirm === true) {
                    const response = await fetch("builds/deleteBuild", {
                        method: "delete",
                        headers: { "Content-type": "application/json" },
                        body: JSON.stringify({
                        requestIdFromJsFile: requestId,
                        }),
                    });
                    const data = await response.json();
                    location.reload();
                    }
                } catch (err) {
                    console.log(err);
            }
        }

        Array.from(deleteBuildBtn).forEach((el) => {
            el.addEventListener("click", deleteBuild);
        });
    </script>
</body>
</html>